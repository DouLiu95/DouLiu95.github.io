[{"title":"How do I build this blog","url":"/2021/10/21/Create-First-Post/","content":"Why Do I Need the BlogHaving my personal blog is always on my to-do-list but with lower priority. As the time of graduating approaching, I realized it is the best time to do it now, as I should get prepared of my previous work and project collection for job application, so why not? Not to mention I could share my learning progress, technics, results and mistakes I made with much more people here. \nHexo and Github PagesI do not want to spend too much time choosing the technology or service to use and building the site. So finally hexo and github pages seem to be a solution\nWhat is Hexo\nHexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other markup languages) and Hexo generates static files with a beautiful theme in seconds .\n\nBuild Local Static Website FirstHere, we first need to build a local static website before we make it public and accessible to Internet. Type commands below in Command Line\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install \nhexo server\n\nWith this, the server is host on our localhost with port 4000. Open http://localhost:4000/ to check it.\nCommandTo add a page or post, the layout could be page, post and title looks like &quot;My new post&quot;.\nhexo new [layout] &lt;title&gt;\n\nDeploy Website on Github PagesFirst, create a new repo with name &lt;github-username&gt;.github.io.\nThen install the plugin `hexo-deployer-git by\nnpm install hexo-deployer-git --save\n\nand then change the configuration by opening blog/_config.yml and add following code:\ndeploy:\n    type: git\n    repo: https:&#x2F;&#x2F;github.com&#x2F;&lt;github-username&gt;&#x2F;&lt;github-username&gt;.github.io.git\n    branch: &lt;branch you want to deploy&gt;\n\nAfter finishing steps above, run following commands to generate static files and deploy them to the github pages:\nhexo generate\nhexo deploy\n\nCongratulationNow open https://&lt;github-username&gt;.github.io and you should see your own blog!\nExtentedHow to embed a PDF in the pageAdobe offers a embed API to make your PDF embedded in a HTML page.\nFirst, log in and create a credential to use, specify the domain as the link of your blog, for me douliu95.github.io.\nThen check a demo, there are four kinds of embed mode to choose:\n\nfull window\nsized container\nin-line\nlightbox\n\nI use in-line mode since I want to embed my cv, which is only one page long. Then, click generate code and get a sample code:\n&lt;div id=\"adobe-dc-view\">&lt;/div>\n&lt;script src=\"https://documentcloud.adobe.com/view-sdk/main.js\">&lt;/script>\n&lt;script type=\"text/javascript\">\n\tdocument.addEventListener(\"adobe_dc_view_sdk.ready\", function()&#123; \n\t\tvar adobeDCView = new AdobeDC.View(&#123;clientId: \"**********you id**********\", divId: \"adobe-dc-view\"&#125;);\n\t\tadobeDCView.previewFile(&#123;\n\t\t\tcontent:&#123;location: &#123;url: \"https://documentcloud.adobe.com/view-sdk-demo/PDFs/Summary.pdf\"&#125;&#125;,\n\t\t\tmetaData:&#123;fileName: \"Summary.pdf\"&#125;\n\t\t&#125;, &#123;&#125;);\n\t&#125;);\n&lt;/script>\n\nThen we copy this code to the markdown file of the page we want to embed with, and then we replace the url under content to my pdf link and change the fileName.\nNow the pdf is embedded in the page.\nHow to automatically adjust the size of image in post?To make a image or picture look good both on PC browser or mobile device, it is necessary to make the size of image adjust automatically. \nUsing the template under when inserting a image:\n&lt;div align&#x3D;&quot;center&quot;&gt;&lt;img src&#x3D;&quot;your image&#39;s url&quot; alt&#x3D;&quot;name&quot; style&#x3D;&quot;width: 100%;max-height: 100%&quot; &#x2F;&gt; &lt;&#x2F;div&gt;\n\nWith this style=&quot;width: 100%;max-height: 100%, it should work now.\n","tags":["Hexo"]},{"title":"Hello World","url":"/2021/10/20/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"How to transfer the local knowledge database to Neo4j Aura","url":"/2021/11/04/How-to-Transfer-the-local-knowledge-map-to-the-Neo4j-Aura/","content":"During the user evaluation of conversational virtual museum guide, one of the user pointed that the knowledge graph visualization was not working. The visualization of knowledge graph is meant to show the connection between entities in knowledge graph directly, to help user understand their relationships. \nThe Problem is …In my project, the visualization is implemented using Neovis.js package. It allows the graph visualization in the browser with data from Neo4j. In the config, it requires to connect with a Neo4j database, and in my case, it was connected with my local knowledge graph database, something like this:\n\nvar config &#x3D; &#123;\n                    container_id: &quot;viz&quot;,\n                    server_url: &quot;bolt:&#x2F;&#x2F;localhost:6784&quot;,\n                    server_user: &quot;neo4j&quot;,\n                    server_password: &quot;password&quot;,\n                    ...\n                    &#125;\n\nTherefore, when the user opens this page to view the visualization, the plug-in will perform queries on the local graph database based on the configuration above. The problem is that there is no graph database on the user’s computer. So, here I need to configure a database that can be accessed remotely.\nPossible way to solve itAs long as we have a remote database, or make my local database accessible remotely, this problem will be solved. There are two possible methods for it, as far as I concerned:\n\nExport my local knowledge base and upload it to a remote server\nUse tools like Ngrok to make localhost accessible by Internet\n\nFinally I chose the first method. Since the second way has an obvious shortcoming that my pc would not be a good server because it is not guaranteed to be accessible 7/24. \nAnd to find a remote server, it could be cloud server from Google or Amazon. But the complex registration and configuration would be too much work for a small project, unless you already have your own server, and the price… I don’t know. \nFortunately, Neo4j has it own cloud service, which is called Neo4j Aura, and Aura has free plan for personal use!\nHands onFirst, we need to export the knowledge graph data from local database. \nExport the dataI tried apoc.export.all.csv first, however, it didn’t work really well. The exported csv data can not be read properly on Aura. \nAnother way is generating a dump file. This way is much easier and promising. Open the Terminal of your graph database on Neo4j Desktop. And the command to generate dump is:\n$ bin\\neo4j-admin dump --database&#x3D;neo4j --to&#x3D;&#123;target path &#125;.dump\n\nResult:\nDone: 89 files, 63.31MiB processed.\n\nImport the data on AuraBefore importing, create a project on Aura, and click the title to see the import section:\n \n\nHere, drop the Dump file to upload, wait for a while for the updating and then the knowledge graph is on the cloud server now.\nThe URL for this database is offered. With the URL, name and password, now the knowledge graph can be accessed anywhere!\nIssue for the URLThe default URL of the database on Aura starts with neo4j+s:// , when I use this as the configuration in Neovis, it specifies to require SSL and a valid cert. As suggested in the document of Neovis\n\nconfig.encrypted&quot;ENCRYPTION_OFF&quot;&#96; (default) or &#96;&quot;ENCRYPTION_ON&quot;\n\nThis must be set to &quot;ENCRYPTION_ON&quot; when using a secure WebSocket connection, such as with Neo4j Aura.\n\n I added it in the config, and the page got error said:\nEncryption&#x2F;trust can only be configured either through URL or config\n\nTo solve it, as suggested in here, set the URL to be neo4j:// fixes it.  Like this:\nvar config = &#123;\n                    container_id: \"viz\",\n                    server_url: \"neo4j://fc932d9f.databases.neo4j.io\",\n                    server_user: \"neo4j\",\n                    server_password: \"password\",\n                    encrypted:'ENCRYPTION_ON',\n                    trust:'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES',\n\t\t\t\t\t...\n\t\t\t\t&#125;\n\n\n\n\n\nConnect Aura with PythonSo as I transfer the dataset to Aura, I should also update my python code, which is connected to the graph base for query using Py2neo.\nThe previous code to connect local database is:\ng &#x3D; Graph(\n            scheme&#x3D;&quot;neo4j&quot;,\n            host&#x3D;&quot;localhost&quot;,\n            port&#x3D;7687,\n            auth&#x3D;(&quot;neo4j&quot;, &quot;password&quot;))\n\n For Aura, it changes to:\ng &#x3D; Graph(&quot;neo4j+s:&#x2F;&#x2F;fc932d9f.databases.neo4j.io&quot;, auth&#x3D;(&quot;neo4j&quot;, &quot;password&quot;), routing&#x3D;True)\n\n"}]